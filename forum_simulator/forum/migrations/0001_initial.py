# Generated by Django 5.2.7 on 2025-10-02 12:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('archetype', models.CharField(max_length=50)),
                ('traits', models.JSONField(blank=True, default=dict)),
                ('needs', models.JSONField(blank=True, default=dict)),
                ('mood', models.CharField(default='neutral', max_length=20)),
                ('loyalties', models.JSONField(blank=True, default=dict)),
                ('reputation', models.JSONField(blank=True, default=dict)),
                ('triggers', models.JSONField(blank=True, default=list)),
                ('cooldowns', models.JSONField(blank=True, default=dict)),
                ('suspicion_score', models.FloatField(default=0.0)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OracleDraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick_number', models.PositiveIntegerField(unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('rolls', models.JSONField(default=list)),
                ('card', models.CharField(blank=True, max_length=50)),
                ('energy', models.IntegerField(default=0)),
                ('energy_prime', models.IntegerField(default=0)),
                ('alloc', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['tick_number'],
            },
        ),
        migrations.CreateModel(
            name='TickLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick_number', models.PositiveIntegerField(unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('events', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['tick_number'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sentiment', models.FloatField(default=0.0)),
                ('toxicity', models.FloatField(default=0.0)),
                ('quality', models.FloatField(default=0.0)),
                ('votes', models.IntegerField(default=0)),
                ('tick_number', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('needs_delta', models.JSONField(blank=True, default=dict)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='forum.agent')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModerationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=50)),
                ('reason', models.TextField(blank=True)),
                ('confidence', models.FloatField(default=0.0)),
                ('tick_number', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_actions', to='forum.agent')),
                ('target_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_events', to='forum.agent')),
                ('target_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_events', to='forum.post')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrivateMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('tick_number', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('tone', models.FloatField(default=0.0)),
                ('tie_delta', models.FloatField(default=0.0)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='forum.agent')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='forum.agent')),
            ],
            options={
                'ordering': ['sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topics', models.JSONField(blank=True, default=list)),
                ('heat', models.FloatField(default=0.0)),
                ('locked', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='forum.agent')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='threads', to='forum.board')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='forum.thread'),
        ),
    ]
