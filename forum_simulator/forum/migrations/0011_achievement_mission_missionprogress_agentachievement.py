# Generated by Django 4.2.25 on 2025-10-06 20:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('forum', '0010_alter_agent_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('icon_slug', models.CharField(blank=True, max_length=150)),
                ('category', models.CharField(default='general', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('contracts', 'Contracts'), ('lore', 'Lore Fragments'), ('trust', 'Trust Meter')], default='contracts', max_length=32)),
                ('status', models.CharField(choices=[('backlog', 'backlog'), ('active', 'active'), ('completed', 'completed')], default='backlog', max_length=16)),
                ('progress', models.FloatField(default=0.0)),
                ('target', models.FloatField(default=1.0)),
                ('position', models.PositiveIntegerField(db_index=True, default=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'position', 'title'],
            },
        ),
        migrations.CreateModel(
            name='MissionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tick_number', models.PositiveIntegerField(blank=True, null=True)),
                ('delta', models.FloatField(default=0.0)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mission_entries', to='forum.agent')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to='forum.mission')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.FloatField(default=0.0)),
                ('unlocked_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='forum.achievement')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='forum.agent')),
            ],
            options={
                'ordering': ['-unlocked_at', 'agent_id'],
                'unique_together': {('agent', 'achievement')},
            },
        ),
    ]
